/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package com.storeii.nciproject.model;

/**
 *
 * @author Main
 */

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;


@RestController // This means that this class is a Controller and @Rest means we don't need to include @ResponseBody
@RequestMapping(path="/webstoredb") // This means URL's start with /webstoredb (after Application path)
public class CustomerController {
    @Autowired
    // This means to get the bean called repository
    // which is auto-generated by Spring, we will use it to handle the data
    private CustomerRepository customerRepository;
    
    @Autowired
    private AddressRepository addressRepository;
    
    @Autowired
    private LocationRepository locationRepository;
    
    
    // CUSTOMER
    // Adding a new Customer
    // Note: try catch wrapping here will break the server
    @PostMapping(path="/addCustomer") // Map ONLY POST Requests
    public Customer addCustomer (
        @RequestParam String firstName,
        @RequestParam String surname,
        @RequestParam String userName,
        @RequestParam String userPass,
        @RequestParam String address,
        @RequestParam String location
        )
    {
        Customer customer = new Customer();
        customer.setFirstName(firstName);
        customer.setSurname(surname);
        customer.setUserName(userName);
        customer.setUserPass(userPass);
        
        System.out.println("firstName set to : " + customer.getFirstName());
        System.out.println("surname set to : " + customer.getSurname());
        System.out.println("userName set to : " + customer.getUserName());
        System.out.println("userPass set to : " + customer.getUserPass());
        System.out.println("Location : " + location);
        
        // get the actual location and address from the repos
        int i  = Integer.parseInt(address);
        int i2 = Integer.parseInt(location);
        customer.setAddress(addressRepository.getById(i));
        customer.setLocation(locationRepository.getById(i2));
        
        // SAVE
        customerRepository.save(customer);
        return customer;
    }
    
    
    // find all customers
    @GetMapping(path="/getCustomers")
    public Iterable<Customer> getCustomers() {
      return customerRepository.findAll();  // This returns a JSON or XML with the users
    }
    
}